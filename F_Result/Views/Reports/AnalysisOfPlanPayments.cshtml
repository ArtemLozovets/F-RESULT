@{
    ViewBag.Title = "Анализ плановых показателей";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var years = Enumerable
    .Range(DateTime.Now.Year - 10, 11)
    .Select(year => new SelectListItem
    {
        Value = year.ToString(),
        Text = year.ToString(),
        Selected = (year == DateTime.Today.Year)
    });
}

<div id="loadingImg">
    <div id="preloadImg">
        <img src="~/Content/Images/loader.gif" />
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">
                ОТЧЕТЫ
                <small>Анализ плановых показателей</small>
            </h1>
            <ol class="breadcrumb">
                <li>@Html.ActionLink("Главная", "Index", "Home", new { Area = "" }, null)</li>
                <li>Отчеты</li>
                <li class="active">Анализ плановых показателей</li>
            </ol>
        </div>
    </div>

    <div id="chartReport">
        <div class="row form-inline">
            @Html.DropDownList("year", years, new
       {
           @class = "form-control form-inline input-sm",
           style = "margin:2px; width:100px; display:inline-block;",
           id = "YDDL",
       })

            <select id="chartType" class="form-control input-sm" style="width:140px;">
                <option value="bar">Графбар</option>
                <option value="line">Линейная</option>
            </select>

            <input type="button" class="btn-default btn-sm modeBtn" style="width:140px;" value="Табличный отчет">
        </div>

        <div class="row chartRow">
            <div class="chartContainer" id="cnvdiv">
                <canvas id="myChart" width="800" height="400"></canvas>
            </div>
            <div class="chartInfoes">
                <span id="pcsum" class="inStat">ДОХОДЫ</span>
                <span id="pdsum" class="outStat">РАСХОДЫ</span>
            </div>
        </div>
    </div>

    <div id="tblReport" hidden>
        <div class="row">
            @Html.DropDownList("PeriodDDL", (SelectList)ViewData["periodItems"], null, new
       {
           @class = "form-control input-sm",
           name = "PeriodDDL",
           title = "Плановый период",
           style = "float:left !important; margin-right:4px;"
       })
            <input type="button" class="btn-default btn-sm modeBtn" style="width:140px;" value="Диаграмма">
        </div>
        <div class="row">
            <h2 class="text-danger text-center">В РАЗРАБОТКЕ</h2>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/Chart.js"></script>
    <script>
        $(function () {
            $('#loadingImg').hide();
            var _Year = $('#YDDL').val();
            var chartType = $("#chartType").val();
            GetChart(_Year, chartType);
        });


        $('body').on('change', '#YDDL', function (e) {
            var _Year = $('#YDDL').val();
            var chartType = $("#chartType").val();
            GetChart(_Year, chartType);
        });

        $('body').on('change', '#chartType', function (e) {
            var _Year = $('#YDDL').val();
            var chartType = $("#chartType").val();
            GetChart(_Year, chartType);
        });

        function GetChart(_Year, chartType) {
            $('#loadingImg').show();
            $.get('/Reports/GetPlanData', {
                Year: _Year,
            },
                    function (data) {
                        $('#loadingImg').hide();
                        if (data.Result) {
                            $("#ModeLabel").html(data.Message);
                            $('#ModeElem').val(data.Mode);
                            var pcsum = data.pcsum.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1&nbsp;");
                            var pcavg = data.pcavg.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1&nbsp;");
                            var pcmin = data.pcmin.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1&nbsp;");
                            var pcmax = data.pcmax.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1&nbsp;");
                            $('#pcsum').html('<tt><dl class="dl-horizontal chartDL">'
                                + '<dt>SUM:&nbsp;</dt><dd class="text-right">' + pcsum + '</dd>'
                                + '<dt>AVG:&nbsp;</dt><dd class="text-right">' + pcavg + '</dd>'
                                + '<dt>MIN:&nbsp;</dt><dd class="text-right">' + pcmin + '</dd>'
                                + '<dt>MAX:&nbsp;</dt><dd class="text-right">' + pcmax + '</dd></dl></tt>');

                            var pdsum = data.pdsum.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1&nbsp;");
                            var pdavg = data.pdavg.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1&nbsp;");
                            var pdmin = data.pdmin.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1&nbsp;");
                            var pdmax = data.pdmax.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1&nbsp;");
                            $('#pdsum').html('<tt><dl class="dl-horizontal chartDL">'
                                + '<dt>SUM:&nbsp;</dt><dd class="text-right">' + pdsum + '</dd>'
                                + '<dt>AVG:&nbsp;</dt><dd class="text-right">' + pdavg + '</dd>'
                                + '<dt>MIN:&nbsp;</dt><dd class="text-right">' + pdmin + '</dd>'
                                + '<dt>MAX:&nbsp;</dt><dd class="text-right">' + pdmax + '</dd></dl></tt>');
                            DrawChart(data.Mode, data.ChartData, data.ChartDataA, chartType, _Year);
                        }
                        else {
                            alert(data.Message);
                        }
                    });
        };

        function DrawChart(mode, ChartData, ChartDataA, chartType, _Year) {

            $('#myChart').remove();
            $('#cnvdiv').append('<canvas id="myChart" width="800" height="400"><canvas>');

            var canvas = $('#myChart');
            var ctx = canvas.get(0).getContext("2d");

            var myChart = new Chart(ctx, {
                type: chartType,
                data: {
                    labels: ["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Декабрь"],
                    datasets: [
                        {
                            label: 'План доходов',
                            data: ChartData,
                            backgroundColor: 'rgba(128, 200, 64, 0.2)',
                            borderColor: 'rgba(128, 200, 64, 1)',
                            borderWidth: 1
                        },

                         {
                             label: 'План расходов',
                             data: ChartDataA,
                             backgroundColor: 'rgba(255, 99, 132, 0.2)',
                             borderColor: 'rgba(255, 99, 132, 1)',
                             borderWidth: 1
                         }
                    ]
                },
                options: {
                    responsive: false, // Без этой строки появляется ошибка "Cannot read property 'currentStyle' of null" при изменении масштаба.
                    maintainAspectRatio: true,
                    title: {
                        display: true,
                        position: 'top',
                        fontSize: 14,
                        fontColor: '#46709D',
                        text: 'Анализ плановых показателей за ' + _Year + ' год'
                    },
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true,
                                //yAxes labels currency format.
                                //Для корректного формирования значения подписи оси используем функцию toFixed()с разными параметрами.
                                callback: function (label, index, labels) {
                                    if (label <= 1) {
                                        return label.toFixed(1).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1 ");
                                    }
                                    else {
                                        return label.toFixed(0).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1 ");
                                    }
                                }
                            }
                        }]
                    },
                    // Tooltips currency format
                    tooltips: {
                        callbacks: {
                            label: function (tooltipItem, data) {
                                return data.datasets[tooltipItem.datasetIndex].label + ": " + tooltipItem.yLabel.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1 ");
                            }
                        }
                    }
                }
            });
        };

    </script>
    <script>
        //Скрипт переключения режимов отображения отчета (Диаграмма/Табличный)
        $('body').on('click', '.modeBtn', function () {
            if ($(this).val() === 'Табличный отчет') {
                $('#chartReport').fadeOut(500, function () {
                    $('#tblReport').fadeIn(500);
                });
            }
            if ($(this).val() === 'Диаграмма') {
                $('#tblReport').fadeOut(500, function () {
                    $('#chartReport').fadeIn(500);
                });
            }
        });
    </script>

    <script>
        //Скрипт для работы с фильтром выбора планового периода
        $(function () {
            //Читаем значение фильтра планового периода
            if (localStorage.getItem('PlanningPeriod') !== null) {
                var DDLVal = localStorage.getItem('PlanningPeriod');
                $('#PeriodDDL').val(DDLVal);
            }

            $('body').on('change', '#PeriodDDL', function () {
                localStorage.setItem('PlanningPeriod', $(this).val());
            });
        });
    </script>
}