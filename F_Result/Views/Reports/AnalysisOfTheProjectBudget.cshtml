@{
    ViewBag.Title = "Бюджетирование";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Scripts/DateRangePicker/daterangepicker.min.css" rel="stylesheet" />
<link href="~/Content/DataTables/css/dataTables.bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/DataTables/css/responsive.bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/DataTables/css/fixedHeader.dataTables.min.css" rel="stylesheet" />
<link href="~/Content/DataTables/css/fixedHeader.bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/jquery.contextMenu.min.css" rel="stylesheet" />

<div id="loadingImg">
    <div id="preloadImg">
        <img src="~/Content/Images/loader.gif" />
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">
                Бюджетирование
                <small>Контроль выполнения бюджетов</small>
            </h1>
            <ol class="breadcrumb">
                <li>@Html.ActionLink("Главная", "Index", "Home", new { Area = "" }, null)</li>
                <li>Отчеты</li>
                <li class="active">Бюджетирование</li>
            </ol>
        </div>
    </div>

    <div class="row">
        <div class="row form-inline">
            @Html.DropDownList("BudgetPeriodDDL", (SelectList)ViewData["periodItems"], null, new
            {
                @class = "form-control input-sm",
                name = "BudgetPeriodDDL",
                title = "Плановый период",
                style = "display:inline-block; margin-bottom:-1px; margin-left:1.3em; width:16em;"
            })

            <input type="text" style="width:10em;text-align:center;" id="startDate" placeholder="Базовая дата" title="Базовая дата для расчета начальной и конечной дат отчетного периода" class="form-control input-sm" value="" />

            @Html.CheckBox("isAllTimes", false, new { @class = "form-control", style = "width:16px;" })
            <label for="isAllPeriod" class="control-label">За весь период</label>
        </div>
    </div>

    <div class="row">
        <table class="table table table-bordered table-striped table-responsive table-hover gridtable" id="gridtable" style="width:100%">
            <thead>
                <tr>
                    <th rowspan="2">Проект</th>
                    <th colspan="2">Доходы</th>
                    <th rowspan="2">&#916;&nbsp;<sub>дох.</sub></th>
                    <th colspan="2">Расходы</th>
                    <th rowspan="2">&#916;&nbsp;<sub>расх.</sub></th>
                </tr>
                <tr>
                    <th class="smallTH">План</th>
                    <th class="smallTH">Факт</th>
                    <th class="smallTH">План</th>
                    <th class="smallTH" style="border-right:1px solid #ddd !important">Факт</th>
                </tr>
            </thead>
            <tfoot>
                <tr class="tright">
                    <th>Итого</th>
                    <th class="smallTH"></th>
                    <th class="smallTH"></th>
                    <th class="smallTH"></th>
                    <th class="smallTH"></th>
                    <th class="smallTH"></th>
                    <th class="smallTH"></th>
                </tr>
            </tfoot>
            <tbody></tbody>
        </table>
    </div>
</div>

<div id="flowPanel">
    <i class="fa fa-arrow-left" id="showButton">&nbsp;<span id="revText">ПРОЕКТЫ</span></i>
    <div style="width:100%; margin:20px auto; color:#eee" class="text-center">
        <span style="font-size:1.5em;"><i class="glyphicon glyphicon-briefcase"></i>&nbsp;ПРОЕКТЫ <span style="color:#f66;">(В РАЗРАБОТКЕ)</span></span>
        <span style="display:block; margin-top:10px;">
            <input type="radio" name="group1" class="prjRb" id="allrb" value="All"><label for="allrb">Все</label>&nbsp;
            <input type="radio" name="group1" class="prjRb" id="currentrb" value="Current" checked><label for="currentrb">Действующие</label>&nbsp;
            <input type="radio" name="group1" class="prjRb" id="selectrb" value="Select"><label for="selectrb">По выбору</label>
        </span>
    </div>

</div>

<a href="#" class="scrollup1">Наверх</a>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/DataTables/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/DataTables/dataTables.bootstrap.min.js"></script>
    <script src="~/Scripts/DataTables/dataTables.responsive.min.js"></script>
    <script src="~/Scripts/DataTables/responsive.bootstrap.min.js"></script>
    <script src="~/Scripts/DataTables/dataTables.fixedHeader.min.js"></script>
    <script src="~/Scripts/jquery.contextMenu.min.js"></script>
    <script src="~/Scripts/toparrow.js"></script>
    <script>
        //Скрипт инициализации страницы
        $(function () {
            //Читаем значение фильтра планового периода
            if (localStorage.getItem('PlanningPeriod') !== null) {
                var DDLVal = localStorage.getItem('PlanningPeriod');
                $('#BudgetPeriodDDL').val(DDLVal);
            }
            var nowDT = new Date;
            var nowDate = moment(nowDT).format('DD/MM/YYYY');
            $("#startDate").val(nowDate);
            $('#loadingImg').hide();
            createGrid();
        })
    </script>

    <script type="text/javascript">
        //Скрипт для работы с контекстным меню
        $(function () {
            $.contextMenu({
                selector: '.dataTables_empty, td.context-menu-one',
                callback: function (key, options) {
                    var fClass = $(this).attr('class');
                    switch (key) {
                        case 'filter':
                            if (fClass.indexOf("prgCellf") >= 0) {
                                $('#gridtable_filter').find('input').val($(this).text()).trigger('keyup');
                            }
                            break;
                        case 'refresh':
                            ClearFilter();
                            break;
                        default:
                            return;
                    }
                },
                items: {
                    "filter": {
                        name: "Фильтр по значению",
                        icon: "filter",
                        disabled: function () {
                            var fClass = $(this).attr('class');
                            if (fClass.indexOf("Cellf") >= 0) { return false };
                            return true;
                        }
                    },
                    "refresh": { name: "Сброс фильтра", icon: "refresh" }
                }
            });
        });
    </script>



    <script>
        //Скрипт создания таблицы
        function createGrid() {
            $('#loadingImg').hide();
            if ($('#isAllTimes').is(':checked')) { _isAllTimes = true };
            var table = $('#gridtable').DataTable({
                "fixedHeader": {
                    "header": true,
                    footer: true,
                    "headerOffset": $('#mainNavbar').height()
                },
                autoWidth: true,
                paging: true,
                processing: true,
                serverSide: true,
                filter: true,
                orderMulti: false,
                responsive: false,
                pageLength: 25, // Количество записей в таблице по умолчанию
                pagingType: "simple_numbers",
                dom: "<'row'<'col-sm-3'l><'#alrt.col-sm-6 text-center'B><'col-sm-3'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                language: {
                    lengthMenu: "Записей: _MENU_",
                    zeroRecords: "Записи отсутствуют",
                    info: "Страница _PAGE_ из _PAGES_. Записи _START_ - _END_ из _TOTAL_",
                    infoEmpty: "Записи отсутствуют",
                    infoFiltered: "(Отфильтровано из _MAX_ записей)",
                    search: "",
                    searchPlaceholder: "Проект...",
                    processing: "<div id='loadingImg'><div id='preloadImg'><img src='../Content/Images/loader.gif' /></div></div>",
                    sInfoThousands: " ",
                    oPaginate: {
                        sNext: ">",
                        sPrevious: "<"
                    }
                },
                ajax: {
                    type: 'POST',
                    url: '/Reports/GetAPB/',
                    datatype: "json",
                    //Получаем Id планового периода.
                    // Использование ф-ции необходимо для обновления значения выпадающего списка при повторной отправке запроса.
                    data: function (d) {
                        var _isAllTimes = false;
                        if ($('#isAllTimes').is(':checked')) { _isAllTimes = true };

                        d.Period = $('#BudgetPeriodDDL').val();
                        d.BaseDate = $('#startDate').val();
                        d.IsAllTimes = _isAllTimes;
                    },
                    dataSrc: function (d) {
                        $('#loadingImg').hide();
                        if (!d.Result) {
                            alert(d.errormessage);
                            return false;
                        }
                        else {
                            return d.data;
                        }
                    },
                },
                order: [[0, "asc"]],
                columns: [
                    { data: "ProjectName", sWidth: '32%', name: "ProjectName", "class": "context-menu-one prgCellf" },
                    { data: "debitplan", sWidth: '12%', render: $.fn.dataTable.render.number('&nbsp;', ',', 2), bSortable: false, "class": "text-right context-menu-one" },
                    { data: "debitfact", sWidth: '12%', render: $.fn.dataTable.render.number('&nbsp;', ',', 2), bSortable: false, "class": "text-right context-menu-one" },
                    { data: "ddelta", sWidth: '10%', render: $.fn.dataTable.render.number('&nbsp;', ',', 2), bSortable: false, "class": "text-right context-menu-one" },
                    { data: "creditplan", sWidth: '12%', render: $.fn.dataTable.render.number('&nbsp;', ',', 2), bSortable: false, "class": "text-right context-menu-one" },
                    { data: "creditfact", sWidth: '12%', render: $.fn.dataTable.render.number('&nbsp;', ',', 2), bSortable: false, "class": "text-right context-menu-one" },
                    { data: "cdelta", sWidth: '10%', render: $.fn.dataTable.render.number('&nbsp;', ',', 2), bSortable: false, "class": "text-right context-menu-one" }
                ],

                fnCreatedRow: function (row, data, rowIndex) {
                    if (data.ddelta > 0) {
                        $('td:eq(3)', row).css('background-color', 'rgba(128, 200, 64, 0.3)');
                    }
                    else if (data.ddelta < 0) {
                        $('td:eq(3)', row).css('background-color', 'rgba(255, 99, 132, 0.3)');
                    }

                    if (data.cdelta > 0) {
                        $('td:eq(6)', row).css('background-color', 'rgba(255, 99, 132, 0.3)');
                    }
                    else if (data.cdelta < 0) {
                        $('td:eq(6)', row).css('background-color', 'rgba(128, 200, 64, 0.3)');
                    }
                },

                fnDrawCallback: function (settings) {
                    var api = this.api();
                    var json = api.ajax.json();
                    var numFormat = $.fn.dataTable.render.number('&nbsp;', ',', 2).display;
                    $(api.column(1).footer()).html(numFormat(json.total.DebitPlanTotal));
                    $(api.column(2).footer()).html(numFormat(json.total.DebitFactTotal));
                    $(api.column(3).footer()).html(numFormat(json.total.dDeltaTotal));
                    $(api.column(4).footer()).html(numFormat(json.total.CreditPlanTotal));
                    $(api.column(5).footer()).html(numFormat(json.total.CreditFactTotal));
                    $(api.column(6).footer()).html(numFormat(json.total.cDeltaTotal));

                    if (json.total.dDeltaTotal * 1 > 0) { $('tr:eq(0) th:eq(3)', api.table().footer()).css('background-color', 'rgba(128, 200, 64, 0.3)'); }
                    else if (json.total.dDeltaTotal * 1 < 0) { $('tr:eq(0) th:eq(3)', api.table().footer()).css('background-color', 'rgba(255, 99, 132, 0.3)'); }

                    if (json.total.cDeltaTotal * 1 > 0) { $('tr:eq(0) th:eq(6)', api.table().footer()).css('background-color', 'rgba(255, 99, 132, 0.3)'); }
                    else if (json.total.cDeltaTotal * 1 < 0) { $('tr:eq(0) th:eq(6)', api.table().footer()).css('background-color', 'rgba(128, 200, 64, 0.3)'); }


                    if (json.Result) {
                        if (!json.isAllTimes) {
                            var startDate = moment(json.StartPeriod).format('DD/MM/YYYY');
                            var endDate = moment(json.EndPeriod).format('DD/MM/YYYY');
                            $('#alrt').html('Отчетный период: <span class="badge sum-block">' + startDate + ' - ' + endDate + '</span>');
                        } else {
                            $('#alrt').html('Отчетный период: <span class="badge sum-block">За весь период</span>');
                        }
                    }
                }
            });
        };
    </script>


    @*Блок скриптов для работы с DateRangePicker*@
    <script src="~/Scripts/moment.min.js"></script>
    <script src="~/Scripts/DateRangePicker/jquery.daterangepicker.min.js"></script>
    <script>
        $(function () {
            $('#startDate').dateRangePicker(
                 {
                     customTopBar: 'Начало периода',
                     showWeekNumbers: true,
                     startOfWeek: 'monday',
                     singleDate: true,
                     singleMonth: true,
                     language: 'ru',
                     startOfWeek: 'monday',
                     separator: ' - ',
                     format: 'DD/MM/YYYY',
                     autoClose: false,
                     monthSelect: true,
                     yearSelect: true,
                     setValue: function (s) {
                         $(this).val(s);
                     },
                     customOpenAnimation: function (cb) {
                         $(this).fadeIn(300, cb);
                     },
                     customCloseAnimation: function (cb) {
                         $(this).fadeOut(300, cb);
                     },
                     showShortcuts: false,
                     time: {
                         enabled: false
                     },
                     extraClass: 'date-range-pickerM'
                 })
            .bind('datepicker-apply', function (event, obj) {
                var table = $("#gridtable").DataTable();
                table.draw();
            })

            $('#startDate').on('change', function () {
                if ($(this).val() === '') {
                    var nowDT = new Date;
                    var nowDate = moment(nowDT).format('DD/MM/YYYY');
                    $(this).val(nowDate);
                };
                var table = $("#gridtable").DataTable();
                table.draw();
            });

        });
    </script>

    <script>
        //Скрипт для работы с фильтром выбора планового периода

        $('body').on('change', '#BudgetPeriodDDL', function () {
            localStorage.setItem('PlanningPeriod', $(this).val());
            var table = $("#gridtable").DataTable();
            table.draw();
        });
    </script>

    <script>
        //Скрипт обработчика изменения состояния элемента "За весь период"
        $('#isAllTimes').on('change', function () {
            if ($(this).is(':checked')) {
                $('#startDate').attr('disabled', 'disabled');
                var table = $("#gridtable").DataTable();
                table.draw();
            } else {
                $('#startDate').removeAttr('disabled');
                var table = $("#gridtable").DataTable();
                table.draw();
            }
        });
    </script>

    <script>
        //Скрипт работы с панелью проектов
        $('#showButton').on('click', function () {
            if ($('#flowPanel').hasClass('open')) {
                $('#flowPanel').animate({ right: -400 }, 500).removeClass('open');
                $('#showButton').removeClass('fa-arrow-right').addClass('fa-arrow-left');
            } else {
                $('#flowPanel').animate({ right: 0 }, 500).addClass('open');
                $('#showButton').removeClass('fa-arrow-left').addClass('fa-arrow-right');
            }
        });
    </script>

    <script>
        function ClearFilter() {
            $('#gridtable_filter').find('input').val('').trigger('keyup');
        }
    </script>
}

