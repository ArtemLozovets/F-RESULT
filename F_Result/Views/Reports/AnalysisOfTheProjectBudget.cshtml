@{
    ViewBag.Title = "Бюджетирование";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Scripts/DateRangePicker/daterangepicker.min.css" rel="stylesheet" />
<link href="~/Content/DataTables/css/dataTables.bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/DataTables/css/responsive.bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/DataTables/css/fixedHeader.dataTables.min.css" rel="stylesheet" />
<link href="~/Content/DataTables/css/fixedHeader.bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/DataTables/css/buttons.dataTables.min.css" rel="stylesheet" />
<link href="~/Content/DataTables/css/buttons.bootstrap.css" rel="stylesheet" />
<link href="~/Content/jquery.contextMenu.min.css" rel="stylesheet" />

<style>
    .dataTables_scrollHeadInner {
        background-color: #eee;
    }

    #flowPanel div.dataTables_wrapper div.dataTables_filter {
        text-align: center !important;
        margin-top: 10px;
    }

    #flowPanel #prgtable_filter input {
        width: 300px !important;
        margin-right: 8px;
    }

    .dt-buttons.btn-group {
        float: none;
    }

    .expButton {
        padding: 5px 12px;
    }
</style>

<div id="loadingImg">
    <div id="preloadImg">
        <img src="~/Content/Images/loader.gif" />
    </div>
</div>

<input type="text" value="" id="gridtable_filter" hidden />

<div class="container">
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">
                Бюджетирование
                <small>Контроль выполнения бюджетов</small>
            </h1>
            <ol class="breadcrumb">
                <li>@Html.ActionLink("Главная", "Index", "Home", new { Area = "" }, null)</li>
                <li>Отчеты</li>
                <li class="active">Бюджетирование</li>
            </ol>
        </div>
    </div>

    <div class="row">
        <div class="row form-inline pull-right">
            <label for="isAllPeriod" class="control-label">За весь период</label>
            @Html.CheckBox("isAllTimes", false, new { @class = "form-control", style = "width:16px;" })

            <input type="text" style="width:10em;text-align:center; margin:0 0.4em;"
                   id="startDate" placeholder="Базовая дата"
                   title="Базовая дата для расчета начальной и конечной дат отчетного периода" class="form-control input-sm" value="" />

            @Html.DropDownList("BudgetPeriodDDL", (SelectList)ViewData["periodItems"], null, new
       {
           @class = "form-control input-sm",
           name = "BudgetPeriodDDL",
           title = "Плановый период",
           style = "display:inline-block; margin-bottom:-1px; margin-right:1.3em; width:16em;"
       })

        </div>
    </div>

    <div class="row">
        <table class="table table table-bordered table-striped table-responsive table-hover gridtable" id="gridtable" style="width:100%">
            <thead>
                <tr>
                    <th rowspan="2">Проект</th>
                    <th rowspan="2">Финансовый результат</th>
                    <th colspan="2">Доходы</th>
                    <th rowspan="2">&#916;&nbsp;<sub>дох.</sub></th>
                    <th colspan="2">Расходы</th>
                    <th rowspan="2">&#916;&nbsp;<sub>расх.</sub></th>
                </tr>
                <tr>
                    <th class="smallTH">План</th>
                    <th class="smallTH">Факт</th>
                    <th class="smallTH">План</th>
                    <th class="smallTH" style="border-right:1px solid #ddd !important">Факт</th>
                </tr>
            </thead>
            <tfoot>
                <tr class="tright">
                    <th colspan="2">Итого</th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                </tr>
            </tfoot>
            <tbody></tbody>
        </table>
    </div>
</div>

<!-- #Плавающая панель -->
<div id="flowPanel">
    <i class="fa fa-arrow-left" id="showButton">&nbsp;<span id="revText">ПРОЕКТЫ</span></i>
    <div style="width:100%; margin:20px auto; color:#eee" class="text-center">
        <span style="font-size:1.5em;"><i class="glyphicon glyphicon-briefcase"></i>&nbsp;ПРОЕКТЫ</span>
    </div>

    <div style="width:96%; background-color:white; margin: 10px auto; padding:0;">
        <table style="background-color:white; width:100%; margin-top:0 !important;"
               class="table table-bordered table-striped table-responsive table-hover gridtable"
               id="prgtable">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Проект</th>
                    <th><input id="allPrgCHB" checked type="checkbox"></th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>

</div>
<!-- #endregion -->
<a href="#" class="scrollup1">Наверх</a>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/DataTables/jszip.min.js"></script>
    <script src="~/Scripts/DataTables/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/DataTables/dataTables.bootstrap.min.js"></script>
    <script src="~/Scripts/DataTables/dataTables.responsive.min.js"></script>
    <script src="~/Scripts/DataTables/responsive.bootstrap.min.js"></script>
    <script src="~/Scripts/DataTables/dataTables.fixedHeader.min.js"></script>
    <script src="~/Scripts/DataTables/dataTables.buttons.js"></script>
    <script src="~/Scripts/DataTables/buttons.bootstrap.js"></script>
    <script src="~/Scripts/DataTables/buttons.html5.min.js"></script>
    <script src="~/Scripts/DataTables/buttons.flash.min.js"></script>
    <script src="~/Scripts/jquery.contextMenu.min.js"></script>
    <script src="~/Scripts/toparrow.js"></script>

    <script>
        $(function () {
            //Читаем значение фильтра планового периода
            if (localStorage.getItem('PlanningPeriod') !== null) {
                var DDLVal = localStorage.getItem('PlanningPeriod');
                $('#BudgetPeriodDDL').val(DDLVal);
            }

            //Объявление глобальных переменных
            window._flag = true;
            window._prjIDs = []; //Массив проектов таблицы отчета
            window.filterPrjIDs = []; //Массив выбранных ID проектов в плавающей панели
            var nowDT = new Date;
            var nowDate = moment(nowDT).format('DD/MM/YYYY');
            $("#startDate").val(nowDate);
            $('#loadingImg').hide();

            //Скрипт для работы с контекстным меню
            $.contextMenu({
                selector: '.dataTables_empty, td.context-menu-one',
                callback: function (key, options) {
                    var fClass = $(this).attr('class');
                    switch (key) {
                        case 'filter':
                            if (fClass.indexOf("prgCellf") >= 0) {
                                $('#gridtable_filter').val($(this).text());
                                var table = $("#gridtable").DataTable();
                                table.draw();
                            }
                            break;

                        case 'alltimesfilter':
                            if (fClass.indexOf("prgCellf") >= 0) {
                                $('#isAllTimes').prop('checked', true);
                                $('#startDate').prop('disabled', true);
                                $('#gridtable_filter').val($(this).text());
                                var table = $("#gridtable").DataTable();
                                table.draw();
                            }
                            break;

                        case 'expand':
                            var table = $("#gridtable").DataTable();
                            var json = table.ajax.json();
                            var prj = table.row(this).data().prj;
                            var startDate = moment(json.StartPeriod).format('DD/MM/YYYY');
                            var endDate = moment(json.EndPeriod).format('DD/MM/YYYY');

                            if (fClass.indexOf("cpExp") >= 0) {
                                var url = '@Url.Action("PCShow", "PlanCredits", new { ProjectId = "_prj_", startDate = "_startDate_", endDate = "_endDate_"})';
                                url = url.replace('_prj_', prj).replace('_startDate_', startDate).replace('_endDate_', endDate);
                                window.open(url, '_blank');
                            }
                            if (fClass.indexOf("cfExp") >= 0) {
                                var url = '@Url.Action("ShowPayments", "Directum", new { ProjectId = "_prj_", startDate = "_startDate_", endDate = "_endDate_"})';
                                url = url.replace('_prj_', prj).replace('_startDate_', startDate).replace('_endDate_', endDate);
                                window.open(url, '_blank');
                            }
                            if (fClass.indexOf("dpExp") >= 0) {
                                var url = '@Url.Action("PDShow", "PlanDebits", new { ProjectId = "_prj_", startDate = "_startDate_", endDate = "_endDate_"})';
                                url = url.replace('_prj_', prj).replace('_startDate_', startDate).replace('_endDate_', endDate);
                                window.open(url, '_blank');
                            }
                            if (fClass.indexOf("dfExp") >= 0) {
                                var url = '@Url.Action("ADShow", "ActualDebits", new { ProjectId = "_prj_", startDate = "_startDate_", endDate = "_endDate_"})';
                                url = url.replace('_prj_', prj).replace('_startDate_', startDate).replace('_endDate_', endDate);
                                window.open(url, '_blank');
                            }
                            break;

                        case 'refresh':
                            ClearFilter();
                            break;
                        default:
                            return;
                    }
                },
                items: {
                    "filter": {
                        name: "Фильтр по значению",
                        icon: "filter",
                        disabled: function () {
                            var fClass = $(this).attr('class');
                            if (fClass.indexOf("Cellf") >= 0) { return false };
                            return true;
                        }
                    },

                    "alltimesfilter": {
                        name: "Фильтр за весь период",
                        icon: "alltimesfilter",
                        disabled: function () {
                            var fClass = $(this).attr('class');
                            if (fClass.indexOf("Cellf") >= 0) { return false };
                            return true;
                        }
                    },

                    "sep1": "---------",
                    "expand": {
                        name: "Расшифровка",
                        icon: "expand",
                        disabled: function () {
                            var fClass = $(this).attr('class');
                            if ((fClass.indexOf("dpExp") >= 0
                                    || fClass.indexOf("dfExp") >= 0
                                    || fClass.indexOf("cpExp") >= 0
                                    || fClass.indexOf("cfExp") >= 0)
                                    && $(this).text() != '0,00') { return false };
                            return true;
                        }
                    },
                    "sep2": "---------",
                    "refresh": { name: "Сброс фильтра", icon: "refresh" }
                }
            });

            //Создание таблицы отчета
            createGrid();
        });

        //--------------------------------------F U N C T I O N S----------------------------------

        //Функция очистки массивов, сброса глобальных переменных и реинициализации таблицы отчета
        function globalVarsClear() {
            window._prjIDs = [];
            window.filterPrjIDs = [];
            window._flag = true;
            $('#allPrgCHB').prop('checked', 'checked');
            var table = $("#gridtable").DataTable();
            table.draw();
        }

        //Функция сброса фильтра проектов
        function ClearFilter() {
            $('#gridtable_filter').val('');
            var table = $("#gridtable").DataTable();
            table.draw();
        }

        //Обработчик выбора планового периода
        $('body').on('change', '#BudgetPeriodDDL', function () {
            localStorage.setItem('PlanningPeriod', $(this).val());
            globalVarsClear();
        });

        //Обработчик изменения состояния элемента "За весь период"
        $('#isAllTimes').on('change', function () {
            globalVarsClear();
            if ($(this).is(':checked')) {
                $('#startDate').attr('disabled', 'disabled');
                var table = $("#gridtable").DataTable();
                table.draw();
            } else {
                $('#startDate').removeAttr('disabled');
                var table = $("#gridtable").DataTable();
                table.draw();
            }
        });

        //-------------------------------------------------------------
        //Функция создания таблицы отчета
        function createGrid() {
            $('#loadingImg').hide();
            if ($('#isAllTimes').is(':checked')) { _isAllTimes = true };
            var table = $('#gridtable').DataTable({
                "fixedHeader": {
                    "header": true,
                    footer: true,
                    "headerOffset": $('#mainNavbar').height()
                },
                autoWidth: true,
                paging: true,
                processing: true,
                serverSide: true,
                filter: false,
                orderMulti: false,
                responsive: false,
                lengthMenu: [
                                [10, 25, 50, 100, -1],
                                ['10', '25', '50', '100', 'Все']
                ],
                pageLength: 25, // Количество записей в таблице по умолчанию
                pagingType: "simple_numbers",
                dom: "<'row'<'col-sm-3'l><'#alrt.col-sm-6 text-center'><'col-sm-3 text-right'B>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                language: {
                    lengthMenu: "Записей: _MENU_",
                    zeroRecords: "Записи отсутствуют",
                    info: "Страница _PAGE_ из _PAGES_. Записи _START_ - _END_ из _TOTAL_",
                    infoEmpty: "Записи отсутствуют",
                    infoFiltered: "(Отфильтровано из _MAX_ записей)",
                    search: "",
                    searchPlaceholder: "Проект...",
                    processing: "<div id='loadingImg'><div id='preloadImg'><img src='../Content/Images/loader.gif' /></div></div>",
                    sInfoThousands: " ",
                    oPaginate: {
                        sNext: ">",
                        sPrevious: "<"
                    }
                },
                buttons: [
                    {
                        extend: 'copy',
                        text: '<i class="fa fa-copy"></i>&nbsp;Copy',
                        className: 'btn-primary expButton',
                    },
                       {
                           extend: 'excel',
                           text: '<i class="fa fa-file-excel-o"></i>&nbsp;Excel',
                           className: 'btn-primary expButton',
                           filename: 'AOPBReport',

                           customize: function (xlsx) {
                               var sheet = xlsx.xl.worksheets['sheet1.xml'];
                               $('row:first c', sheet).attr('s', '51');

                           },

                           exportOptions: {
                               modifier: {
                                   page: 'current'
                               },
                               format: {
                                   body: function (data, row, column, node) {
                                       console.log(data);
                                       var res = column != 0 ? data.replace(/[&nbsp;]/g, '').replace(/[,]/g, '.') : data;
                                       console.log(res);
                                       return res;
                                   }
                               }
                           }
                       }
                ],
                ajax: {
                    type: 'POST',
                    url: '/Reports/GetAPB/',
                    datatype: "json",
                    //Получаем Id планового периода.
                    // Использование ф-ции необходимо для обновления значения выпадающего списка при повторной отправке запроса.
                    data: function (d) {
                        var _isAllTimes = false;
                        if ($('#isAllTimes').is(':checked')) { _isAllTimes = true };

                        d.Period = $('#BudgetPeriodDDL').val();
                        d.BaseDate = $('#startDate').val();
                        d.IsAllTimes = _isAllTimes;
                        d.ProjectName = $('#gridtable_filter').val();
                        d.filterPrjIDs = window.filterPrjIDs;
                    },
                    dataSrc: function (d) {
                        $('#loadingImg').hide();
                        if (!d.Result) {
                            alert(d.errormessage);
                            return false;
                        }
                        else {
                            return d.data;
                        }
                    },
                },
                order: [[0, "asc"]],
                columns: [
                    { data: "ProjectName", sWidth: '30%', name: "ProjectName", "class": "context-menu-one prgCellf haveTitle" },
                    { data: "prjres", sWidth: '10%', render: $.fn.dataTable.render.number('&nbsp;', ',', 2), bSortable: false, "class": "text-right context-menu-one" },
                    { data: "debitplan", sWidth: '10%', render: $.fn.dataTable.render.number('&nbsp;', ',', 2), bSortable: false, "class": "text-right context-menu-one cpExp" },
                    { data: "debitfact", sWidth: '10%', render: $.fn.dataTable.render.number('&nbsp;', ',', 2), bSortable: false, "class": "text-right context-menu-one cfExp" },
                    { data: "ddelta", sWidth: '10%', render: $.fn.dataTable.render.number('&nbsp;', ',', 2), bSortable: false, "class": "text-right context-menu-one" },
                    { data: "creditplan", sWidth: '10%', render: $.fn.dataTable.render.number('&nbsp;', ',', 2), bSortable: false, "class": "text-right context-menu-one dpExp" },
                    { data: "creditfact", sWidth: '10%', render: $.fn.dataTable.render.number('&nbsp;', ',', 2), bSortable: false, "class": "text-right context-menu-one dfExp" },
                    { data: "cdelta", sWidth: '10%', render: $.fn.dataTable.render.number('&nbsp;', ',', 2), bSortable: false, "class": "text-right context-menu-one" }
                ],

                fnCreatedRow: function (row, data, rowIndex) {
                    //Выводим всплывающую подсказку с подробной информацией о проекте
                    var _datePlan = formatDate(data.StartDatePlan);
                    var _dateFact = formatDate(data.StartDateFact);
                    var prgTitleStr = 'Тип проекта: ' + data.ProjectType + '\r\nРуководитель: ' + data.ChiefName + '\r\nМенеджер: ' + data.ProjectManagerName + '\r\nДата начала (план): ' + _datePlan + '\r\nДата начала (факт): ' + _dateFact;
                    $('.prgCellf', $(row)).attr('title', prgTitleStr);

                    // Выделение цветом дельта-ячеек
                    if (data.prjres > 0) {
                        $('td:eq(1)', row).css('background-color', 'rgba(128, 200, 64, 0.3)');
                    }
                    else if (data.prjres < 0) {
                        $('td:eq(1)', row).css('background-color', 'rgba(255, 99, 132, 0.3)');
                    }

                    if (data.ddelta > 0) {
                        $('td:eq(4)', row).css('background-color', 'rgba(128, 200, 64, 0.3)');
                    }
                    else if (data.ddelta < 0) {
                        $('td:eq(4)', row).css('background-color', 'rgba(255, 99, 132, 0.3)');
                    }

                    if (data.cdelta > 0) {
                        $('td:eq(7)', row).css('background-color', 'rgba(255, 99, 132, 0.3)');
                    }
                    else if (data.cdelta < 0) {
                        $('td:eq(7)', row).css('background-color', 'rgba(128, 200, 64, 0.3)');
                    }
                },

                fnDrawCallback: function (settings) {
                    //Заполнение футера
                    var api = this.api();
                    var json = api.ajax.json();
                    var numFormat = $.fn.dataTable.render.number('&nbsp;', ',', 2).display;
                    $(api.column(2).footer()).html(numFormat(json.total.DebitPlanTotal));
                    $(api.column(3).footer()).html(numFormat(json.total.DebitFactTotal));
                    $(api.column(4).footer()).html(numFormat(json.total.dDeltaTotal));
                    $(api.column(5).footer()).html(numFormat(json.total.CreditPlanTotal));
                    $(api.column(6).footer()).html(numFormat(json.total.CreditFactTotal));
                    $(api.column(7).footer()).html(numFormat(json.total.cDeltaTotal));

                    if (json.total.dDeltaTotal * 1 > 0) { $('tr:eq(0) th:eq(3)', api.table().footer()).css('background-color', 'rgba(128, 200, 64, 0.3)'); }
                    else if (json.total.dDeltaTotal * 1 < 0) { $('tr:eq(0) th:eq(3)', api.table().footer()).css('background-color', 'rgba(255, 99, 132, 0.3)'); }

                    if (json.total.cDeltaTotal * 1 > 0) { $('tr:eq(0) th:eq(6)', api.table().footer()).css('background-color', 'rgba(255, 99, 132, 0.3)'); }
                    else if (json.total.cDeltaTotal * 1 < 0) { $('tr:eq(0) th:eq(6)', api.table().footer()).css('background-color', 'rgba(128, 200, 64, 0.3)'); }


                    if (json.Result) {
                        if (this.fnSettings().fnRecordsTotal() === 0 && json.isAllTimes) {
                            $('#alrt').html('Отчетный период: <span class="badge sum-block">За весь период</span>');
                        }
                        else {
                            var startDate = moment(json.StartPeriod).format('DD/MM/YYYY');
                            var endDate = moment(json.EndPeriod).format('DD/MM/YYYY');
                            $('#alrt').html('Отчетный период: <span class="badge sum-block">' + startDate + ' - ' + endDate + '</span>');
                        }
                    };

                    //Инициализация таблицы проектов в плавающей панели
                    if (window._flag) {

                        //Заполнение массива проектов для таблицы в плавающей панели
                        _prjIDs = JSON.parse(json.prjlist)

                        var pTable = $('#prgtable').DataTable();
                        pTable.destroy();
                        prgTableCrate();
                        $('#flowPanel').height($('#prgtable_wrapper').height() + 80);
                        window._flag = false;
                    }
                }
            });

            function formatDate(value) {
                if (value === null) return "";
                var pattern = /Date\(([^)]+)\)/;
                var results = pattern.exec(value);
                var dt = new Date(parseFloat(results[1]));
                var _d = dt.getDate() < 10 ? "0" + dt.getDate() : dt.getDate();
                var _m = (dt.getMonth() + 1) < 10 ? "0" + (dt.getMonth() + 1) : (dt.getMonth() + 1);
                return _d + "/" + _m + "/" + dt.getFullYear();
            };

        };

    </script>

    @*Блок скриптов для работы с DateRangePicker*@
    <script src="~/Scripts/moment.min.js"></script>
    <script src="~/Scripts/DateRangePicker/jquery.daterangepicker.min.js"></script>
    <script>
        $(function () {
            $('#startDate').dateRangePicker(
                 {
                     customTopBar: 'Начало периода',
                     showWeekNumbers: true,
                     startOfWeek: 'monday',
                     singleDate: true,
                     singleMonth: true,
                     language: 'ru',
                     startOfWeek: 'monday',
                     separator: ' - ',
                     format: 'DD/MM/YYYY',
                     autoClose: false,
                     monthSelect: true,
                     yearSelect: true,
                     setValue: function (s) {
                         $(this).val(s);
                     },
                     customOpenAnimation: function (cb) {
                         $(this).fadeIn(300, cb);
                     },
                     customCloseAnimation: function (cb) {
                         $(this).fadeOut(300, cb);
                     },
                     showShortcuts: false,
                     time: {
                         enabled: false
                     },
                     extraClass: 'date-range-pickerM'
                 })
            .bind('datepicker-apply', function (event, obj) {
                globalVarsClear();
            })

            $('#startDate').on('change', function () {
                if ($(this).val() === '') {
                    var nowDT = new Date;
                    var nowDate = moment(nowDT).format('DD/MM/YYYY');
                    $(this).val(nowDate);
                };
                globalVarsClear();
            });

        });
    </script>

    <script>
        //Блок скриптов для работы с панелью проектов
        $('#showButton').on('click', function (e) {
            e.stopImmediatePropagation();
            if ($('#flowPanel').hasClass('open')) {
                $('#flowPanel').animate({ right: -360 }, 500).removeClass('open');
                $('#showButton').removeClass('fa-arrow-right').addClass('fa-arrow-left');
            } else {
                $('#flowPanel').animate({ right: 0 }, 500).addClass('open');
                $('#showButton').removeClass('fa-arrow-left').addClass('fa-arrow-right');
            }
        });

        $('body').on('click', function (e) {
            $('#flowPanel').animate({ right: -360 }, 500).removeClass('open');
            $('#showButton').removeClass('fa-arrow-right').addClass('fa-arrow-left');
        }).on('click', '#flowPanel', function (e) {
            e.stopPropagation();

        });

        //Сброс/Установка всех чекбоксов выбора проекта
        $('#allPrgCHB').on('change', function () {
            window.filterPrjIDs = [];
            $('input:checkbox.prgSelectCHB').each(function () {
                $(this).prop('checked', $('#allPrgCHB').prop('checked'));
                if ($(this).is(":checked")) {
                    window.filterPrjIDs.push($(this).data('prjid'));
                };
            });
            if (window.filterPrjIDs.length > 0) {
                var table = $("#gridtable").DataTable();
                table.draw();
            };
        });

        //Проверка состояния всех чекбоксов таблицы
        $('body').on('change', 'input:checkbox.prgSelectCHB', function () {
            var allChecked = true;
            window.filterPrjIDs = [];
            $('input:checkbox.prgSelectCHB').each(function () {
                if (!$(this).is(":checked")) {
                    allChecked = false;
                } else if ($(this).is(":checked")) {
                    window.filterPrjIDs.push($(this).data('prjid'));
                };
            });
            if (allChecked) {
                $('#allPrgCHB').prop('checked', 'checked');
            }
            else if (!allChecked) {
                $('#allPrgCHB').prop('checked', false);
            }
            if (window.filterPrjIDs.length > 0) {
                var table = $("#gridtable").DataTable();
                table.draw();
            };
        });

        //-----------------------------------------------------------------
        //Функция создания таблицы со списком проектов
        function prgTableCrate() {
            var prgTable = $('#prgtable').DataTable({
                autoWidth: true,
                "scrollY": "360px",
                "scrollCollapse": true,
                scrollX: '100%',
                dom: "<<'col-sm-12'f>><'row'<'col-sm-12'tr>>",
                language: {
                    zeroRecords: "Записи отсутствуют",
                    infoEmpty: "Записи отсутствуют",
                    search: "",
                    searchPlaceholder: "Проект...",
                },
                autoWidth: true,
                paging: false,
                processing: false,
                serverSide: false,
                data: _prjIDs,
                order: [[1, "asc"]],
                columns: [
                    { data: 'PrjId', bSortable: true, visible: false, searchable: false },
                    { data: 'ProjectName', bSortable: true, sWidth: '80%' },
                    {
                        data: null, sWidth: '20%',
                        bSortable: false,
                        render: function (data, type, row, meta) {
                            var chkStr = '<div style="width:100%; text-align:center;"><input data-prjid="' + row['PrjId'] + '" class="prgSelectCHB" checked type="checkbox"></div>';
                            return chkStr;
                        }
                    }
                ]
            });
        };

    </script>
}