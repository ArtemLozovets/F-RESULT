@model F_Result.Models.AccountsBalance

@{
    ViewBag.Title = "Редактирование";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/jquery.datetimepicker.min.css" rel="stylesheet" />

<div id="loadingImg">
    <div id="preloadImg">
        <img src="~/Content/Images/loader.gif" />
    </div>
</div>

<div class="container">
    <div class="col-lg-12">
        <h1 class="page-header">
            @ViewBag.Title
            <small>Редактирование информации об остатке на счете организации</small>
        </h1>
        <ol class="breadcrumb">
            <li>@Html.ActionLink("Главная", "Index", "Home", new { Area = "" }, null)</li>
            <li>Показатели</li>
            <li>@Html.ActionLink("Остатки на счетах", "ABShow", "AccountsBalances")</li>
            <li class="active">Редактирование</li>
        </ol>
    </div>

    <div class="row">
        <div class="col-md-6" id="resultMessage" style="cursor:pointer">
            <p class="text-success" id="MessageOk"> @TempData["MessageOk"]</p>
            <p class="text-danger" id="MessageError">  @TempData["MessageError"]</p>
        </div>
    </div>
    <div class="col-md-7" style="margin-top:10px;">
        @using (Html.BeginForm("ABEdit", "AccountsBalances", FormMethod.Post, new { id = "ABForm" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.AccountsBalanceId)
                @Html.HiddenFor(model => model.AccountId)
                <div class="form-group">
                    @Html.LabelFor(model => model.AccountNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.AccountNumber, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", disabled = "enabled", type = "text", data_val_date = "Проверьте правильность ввода даты (ДД/ММ/ГГГГ)" } })
                        @Html.HiddenFor(model => model.Date)
                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Balance, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Balance, new
                   {
                       htmlAttributes = new
                       {
                           @class = "form-control",
                           @onkeyup = "reppoint(this)",
                           @onchange = "reppoint(this)"
                       }
                   })
                        @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextAreaFor(model => model.Note, new { @class = "form-control", rows = "4", maxlength = "160",  style = "resize:vertical;" })
                        @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-4 col-md-8">
                        <button type="submit" title="Сохранить информацию" class="btn btn-primary"><i class="glyphicon glyphicon-floppy-save"></i>&nbsp;Сохранить</button>
                    </div>
                </div>
            </div>
        }

        <div>
            <a class="btn btn-primary" href='@Url.Action("ABShow")'><span class="glyphicon glyphicon-circle-arrow-left"></span>&nbsp;Назад</a>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery.datetimepicker.full.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script>
        $(function () {
            $('#loadingImg').hide();

            $.validator.methods.number = function (value, element) {
                return this.optional(element) || /(^\d{1,10}(\,\d{1,2})?$)/.test(value);
            }

            $.datetimepicker.setLocale('ru');

            // <![CDATA[
            jQuery(function () {
                jQuery('#Date').datetimepicker({
                    format: 'd/m/Y',
                    formatDate: 'd/m/Y',
                    timepicker: false
                });
            });
            // ]]>

            $.validator.methods.date = function (value, element) {
                if (value) {
                    try {
                        $.datepicker.parseDate('dd/mm/yy', value);
                    } catch (ex) {
                        return false;
                    }
                }
                return true;
            };
        });
    </script>
    <script>
        //Separator replace. Convert "." to ","
        function reppoint(elem) {
            var d = elem.value;
            if (d.indexOf(".") > 0) {
                var outstr = d.replace(".", ",");
                elem.value = outstr;
            }
        }
    </script>
}