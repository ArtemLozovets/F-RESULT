@{
    ViewBag.Title = "Счета";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/DataTables/css/dataTables.bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/DataTables/css/responsive.bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/DataTables/css/fixedHeader.dataTables.min.css" rel="stylesheet" />
<link href="~/Content/DataTables/css/fixedHeader.bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/jquery.contextMenu.min.css" rel="stylesheet" />

<div id="loadingImg">
    <div id="preloadImg">
        <img src="~/Content/Images/loader.gif" />
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">
                @ViewBag.Title
                <small>Счета организаций</small>
            </h1>
            <ol class="breadcrumb">
                <li>@Html.ActionLink("Главная", "Index", "Home", new { Area = "" }, null)</li>
                <li>Справочники</li>
                <li class="active">Счета организаций</li>
            </ol>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6" id="resultMessage" style="display:block; height:30px;">
            <p class="text-success" id="MessageOk"> @TempData["MessageOk"]</p>
            <p class="text-danger" id="MessageError">  @TempData["MessageError"]</p>
        </div>
    </div>
    <table class="table table table-bordered table-striped table-responsive table-hover gridtable" id="gridtable" style="width:100%">
        <thead>
            <tr role="row" id="search-row" style="background-color:#ddddff">
                <th><input type="text" class="form-control input-sm sb" style="width: 100%" placeholder="Организация" /></th>
                <th><input type="text" class="form-control input-sm sb" style="width: 100%" placeholder="Банк" /></th>
                <th><input type="text" class="form-control input-sm sb" style="width: 100%" placeholder="МФО" /></th>
                <th><input type="text" class="form-control input-sm sb" style="width: 100%" placeholder="Номер счета" /></th>
                <th><input type="text" class="form-control input-sm sb" style="width: 100%" placeholder="Остаток" /></th>
                <th>
                    <select class="form-control input-sm sb" id="statusList">
                        <option value="all">Все</option>
                        <option value="true">Активен</option>
                        <option value="false">Неактивен</option>
                    </select>
                </th>
                <th><input type="text" class="form-control input-sm sb" style="width: 100%" placeholder="Примечание" /></th>
                <th><input type="text" class="form-control input-sm sb" style="width: 100%" placeholder="Пользователь" /></th>
            </tr>

            <tr role="row">
                <th>Организация</th>
                <th>Банк</th>
                <th>МФО</th>
                <th>Номер счета</th>
                <th>Остаток</th>
                <th>Статус</th>
                <th>Примечание</th>
                <th>Пользователь</th>
            </tr>

        </thead>
        <tbody></tbody>
    </table>

    <a href="#" class="scrollup1">Наверх</a>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/FRScripts/toparrow.js"></script>
    <script src="~/Scripts/DataTables/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/DataTables/dataTables.bootstrap.min.js"></script>
    <script src="~/Scripts/DataTables/dataTables.responsive.min.js"></script>
    <script src="~/Scripts/DataTables/responsive.bootstrap.min.js"></script>
    <script src="~/Scripts/DataTables/dataTables.fixedHeader.min.js"></script>
    <script src="~/Scripts/jquery.contextMenu.min.js"></script>
    <script type="text/javascript">
        $(function () {

            $.contextMenu({
                selector: '.dataTables_empty, td.context-menu-one',
                callback: function (key, options) {
                    switch (key) {
                        case 'add':
                            window.location.href = "/Accounts/ACCreate/";
                            break;
                        case 'details':
                            window.location.href = "/Accounts/ACDetails/" + $(this).closest('tr').data('objid');
                            break;
                        case 'edit':
                            window.location.href = "/Accounts/ACEdit/" + $(this).closest('tr').data('objid');
                            break;
                        case 'delete':
                            window.location.href = "/Accounts/ACDelete/" + $(this).closest('tr').data('objid');
                            break;
                        case 'addBalance':
                            localStorage.setItem('ABCreateReturnURL', '/Accounts/ACShow')
                            window.location.href = "/AccountsBalances/ABBatchCreate";
                            break;
                        case 'refresh':
                            ClearFilter();
                            break;
                        default:
                            return;
                    }
                },
                items: {
                    "refresh": { name: "Сброс фильтра", icon: "refresh" },
                    "separator": "-----",
                    "addBalance": { name: "Внести остатки по счетам", icon: "addBalance" },
                    "separator1": "-----",
                    "add": { name: "Создать", icon: "add" },
                    "details": {
                        name: "Подробно", icon: "details", disabled: function () {
                            var rClass = $(this).attr('class');
                            if (rClass.indexOf("dataTables_empty") >= 0) { return true };
                            return false;
                        }
                    },
                    "edit": {
                        name: "Редактировать", icon: "edit", disabled: function () {
                            var rClass = $(this).attr('class');
                            if (rClass.indexOf("dataTables_empty") >= 0) { return true };
                            return false;
                        }
                    },
                    "delete": {
                        name: "Удалить", icon: "delete", disabled: function () {
                            var rClass = $(this).attr('class');
                            if (rClass.indexOf("dataTables_empty") >= 0) { return true };
                            return false;
                        }
                    },
                }
            });

            //Двойной щелчек по строке таблицы.
            $('#gridtable tbody').on('dblclick', 'tr', function () {
                window.location.href = "/Accounts/ACEdit/" + $(this).closest('tr').data('objid');
            });

            $('#loadingImg').hide();
            var table = $('#gridtable').DataTable({
                "fixedHeader": {
                    "header": true,
                    "headerOffset": $('#mainNavbar').height()
                },
                "processing": true,
                "serverSide": true,
                "filter": true,
                "orderMulti": true,
                "responsive": true,
                "pageLength": 25, // Количество записей в таблице по умолчанию
                "pagingType": "simple_numbers",
                "dom": "<'row'<'col-sm-3'l><'col-sm-9 text-center'B>>" + "<'row'<'col-sm-12'tr>>" + "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                "language": {
                    "lengthMenu": "Записей: _MENU_",
                    "zeroRecords": "Записи отсутствуют",
                    "info": "Страница _PAGE_ из _PAGES_. Записи _START_ - _END_ из _TOTAL_",
                    "infoEmpty": "Записи отсутствуют",
                    "infoFiltered": "(Отфильтровано из _MAX_ записей)",
                    "search": "Поиск",
                    "processing": "<div id='loadingImg'><div id='preloadImg'><img src='../Content/Images/loader.gif' /></div></div>",
                    "sInfoThousands": " ",
                    "oPaginate": {
                        "sNext": ">",
                        "sPrevious": "<"
                    }
                },
                "ajax": {
                    "url": "/Accounts/LoadAC",
                    "type": "POST",
                    "datatype": "json",
                    "dataSrc": function (d) {
                        if (d.data.length === 0) {
                            if (d.errormessage != "") {
                                alert(d.errormessage);
                            }
                        }
                        return d.data;
                    }
                },
                "order": [[0, "desc"]],
                "columns": [
                    { "data": "OrganizationName", "name": "OrganizationName", "autoWidth": true, "class": "context-menu-one" },
                    { "data": "BankName", "name": "BankName", "autoWidth": true, "class": "context-menu-one" },
                    { "data": "MFO", "name": "MFO", "autoWidth": true, "class": "context-menu-one" },
                    { "data": "AccountNumber", "name": "AccountNumber", "autoWidth": true, "class": "context-menu-one" },
                    { "data": "Balance", "name": "Balance", "autoWidth": true, render: $.fn.dataTable.render.number('&nbsp;', ',', 2), "class": "text-right context-menu-one haveTitle balanceCell" },
                    {
                        "data": "Status", "name": "Status", "autoWidth": true, "type": "boolean", "class": "text-center context-menu-one",
                        "render": function (value) {
                            return (value === true) ? '<i style="color:#5cb85c;" class="fa fa-check"></i>' : '<i style="color:#d9534f;" class="fa fa-exclamation-triangle"></i>';
                        }
                    },
                    { "data": "Note", "name": "Note", "autoWidth": true, "class": "context-menu-one" },
                    { "data": "UserFN", "name": "UserFN", "autoWidth": true, "class": "context-menu-one" }
                ],
                "createdRow": function (row, data, rowIndex) {
                    var balanceDate = 'Остаток на дату: ' + formatDate(data.BalanceDate);
                    $(row).attr('data-objid', data.AccountId);
                    $('.balanceCell', $(row)).attr('title', balanceDate);
                }
            });

            table.columns().eq(0).each(function (colIdx) {
                $('.sb', $('th')[colIdx]).on('keyup change', function () {
                    table.column(colIdx).search(this.value).draw();
                });

                $('.dff', $('th')[colIdx]).on('change', function () {
                    table.column(colIdx).search(this.value).draw();
                });
            });

        });

        function formatDate(value) {
            if (value === null) return "";
            var pattern = /Date\(([^)]+)\)/;
            var results = pattern.exec(value);
            var dt = new Date(parseFloat(results[1]));
            var _d = dt.getDate() < 10 ? "0" + dt.getDate() : dt.getDate();
            var _m = (dt.getMonth() + 1) < 10 ? "0" + (dt.getMonth() + 1) : (dt.getMonth() + 1);
            return _d + "/" + _m + "/" + dt.getFullYear();
        };

    </script>

    <script>
        function ClearFilter() {
            var table = $('#gridtable').DataTable();
            $(".sb, .dff").each(function (colIdx) {
                $(this).val('');
                table.column(colIdx).search('');
            });
            table.draw();
            $('#statusList').val('all');
        }
    </script>

}
